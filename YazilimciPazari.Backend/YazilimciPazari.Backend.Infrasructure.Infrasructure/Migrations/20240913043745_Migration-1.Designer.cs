// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YazilimciPazari.Backend.Infrasructure.Infrasructure.Context;

#nullable disable

namespace YazilimciPazari.Backend.Infrasructure.Infrasructure.Migrations
{
    [DbContext(typeof(SqlServerContext))]
    [Migration("20240913043745_Migration-1")]
    partial class Migration1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Okusana")
                .UseCollation("Turkish_CS_AS")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Base.Entity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Concrete.Comment", b =>
                {
                    b.HasBaseType("YazilimciPazari.Backend.Domain.Entities.Base.Entity");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("text")
                        .HasComment("Yorum yazılarının saklandığı yer");

                    b.ToTable("Comments", "Okusana");
                });

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Concrete.Company", b =>
                {
                    b.HasBaseType("YazilimciPazari.Backend.Domain.Entities.Base.Entity");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TaxNumber")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasIndex("TaxNumber", "Password");

                    b.ToTable("Companies", "Okusana");
                });

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Concrete.CompanyComment", b =>
                {
                    b.HasBaseType("YazilimciPazari.Backend.Domain.Entities.Base.Entity");

                    b.Property<Guid>("CommentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CommentId", "CompanyId");

                    b.ToTable("CompanyComments", "Okusana");
                });

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Concrete.CompanySkill", b =>
                {
                    b.HasBaseType("YazilimciPazari.Backend.Domain.Entities.Base.Entity");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("CompanyId");

                    b.HasIndex("SkillId", "CompanyId");

                    b.ToTable("CompanySkills", "Okusana");
                });

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Concrete.Project", b =>
                {
                    b.HasBaseType("YazilimciPazari.Backend.Domain.Entities.Base.Entity");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("UserId");

                    b.ToTable("Projects", "Okusana");
                });

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Concrete.ProjectSkill", b =>
                {
                    b.HasBaseType("YazilimciPazari.Backend.Domain.Entities.Base.Entity");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("SkillId");

                    b.HasIndex("ProjectId", "SkillId");

                    b.ToTable("ProjectSkills", "Okusana");
                });

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Concrete.Skill", b =>
                {
                    b.HasBaseType("YazilimciPazari.Backend.Domain.Entities.Base.Entity");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasComment("Yorum yazılarının saklandığı yer");

                    b.ToTable("Skills", "Okusana");
                });

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Concrete.User", b =>
                {
                    b.HasBaseType("YazilimciPazari.Backend.Domain.Entities.Base.Entity");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasIndex("UserId");

                    b.ToTable("Users", "Okusana");
                });

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Concrete.UserComment", b =>
                {
                    b.HasBaseType("YazilimciPazari.Backend.Domain.Entities.Base.Entity");

                    b.Property<Guid>("CommentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("UserId");

                    b.HasIndex("CommentId", "UserId");

                    b.ToTable("UserComments", "Okusana");
                });

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Concrete.UserSkill", b =>
                {
                    b.HasBaseType("YazilimciPazari.Backend.Domain.Entities.Base.Entity");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("SkillId");

                    b.HasIndex("UserId", "SkillId");

                    b.ToTable("UserSkills", "Okusana");
                });

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Concrete.CompanyComment", b =>
                {
                    b.HasOne("YazilimciPazari.Backend.Domain.Entities.Concrete.Comment", "Comment")
                        .WithMany("CompanyComments")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_CompanyComment_Comment");

                    b.HasOne("YazilimciPazari.Backend.Domain.Entities.Concrete.Company", "Company")
                        .WithMany("CompanyComments")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_CompanyComment_Company");

                    b.Navigation("Comment");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Concrete.CompanySkill", b =>
                {
                    b.HasOne("YazilimciPazari.Backend.Domain.Entities.Concrete.Company", "Company")
                        .WithMany("CompanySkills")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_CompanySkill_Company");

                    b.HasOne("YazilimciPazari.Backend.Domain.Entities.Concrete.Skill", "Skill")
                        .WithMany("CompanySkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_CompanySkill_Skill");

                    b.Navigation("Company");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Concrete.Project", b =>
                {
                    b.HasOne("YazilimciPazari.Backend.Domain.Entities.Concrete.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Project_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Concrete.ProjectSkill", b =>
                {
                    b.HasOne("YazilimciPazari.Backend.Domain.Entities.Concrete.Project", "Project")
                        .WithMany("ProjectSkills")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_ProjectSkill_Project");

                    b.HasOne("YazilimciPazari.Backend.Domain.Entities.Concrete.Skill", "Skill")
                        .WithMany("ProjectSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_ProjectSkill_Skill");

                    b.Navigation("Project");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Concrete.User", b =>
                {
                    b.HasOne("YazilimciPazari.Backend.Domain.Entities.Concrete.User", null)
                        .WithMany("Users")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Concrete.UserComment", b =>
                {
                    b.HasOne("YazilimciPazari.Backend.Domain.Entities.Concrete.Comment", "Comment")
                        .WithMany("UserComments")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_UserComment_Comment");

                    b.HasOne("YazilimciPazari.Backend.Domain.Entities.Concrete.User", "User")
                        .WithMany("UserComments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_UserComment_User");

                    b.Navigation("Comment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Concrete.UserSkill", b =>
                {
                    b.HasOne("YazilimciPazari.Backend.Domain.Entities.Concrete.Skill", "Skill")
                        .WithMany("UserSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_UserSkill_Skill");

                    b.HasOne("YazilimciPazari.Backend.Domain.Entities.Concrete.User", "User")
                        .WithMany("UserSkills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_UserSkill_User");

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Concrete.Comment", b =>
                {
                    b.Navigation("CompanyComments");

                    b.Navigation("UserComments");
                });

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Concrete.Company", b =>
                {
                    b.Navigation("CompanyComments");

                    b.Navigation("CompanySkills");
                });

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Concrete.Project", b =>
                {
                    b.Navigation("ProjectSkills");
                });

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Concrete.Skill", b =>
                {
                    b.Navigation("CompanySkills");

                    b.Navigation("ProjectSkills");

                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("YazilimciPazari.Backend.Domain.Entities.Concrete.User", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("UserComments");

                    b.Navigation("UserSkills");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
